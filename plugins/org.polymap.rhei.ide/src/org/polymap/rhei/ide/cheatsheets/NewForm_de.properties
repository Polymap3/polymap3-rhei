#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)

ctorItem_description = <p formHeight="150">\nTitel und ID des Formulars werden standardm\u00E4\u00DFig auf den Names des Scriptes gesetzt. Das geschieht im <code>Constructor</code> relativ weit oben im Script.</p>\n\n<p>Die <b>ID</b> kann irgendeine Zeichenkette sein, die aber eindeutig sein muss. Der <b>Titel</b> des Formulars wird in der Oberfl\u00E4che verwendet. Es gibt mehrere Arten diesen Titel festzulegen. Hier eintragen ist die einfachste.</p>\n
ctorItem_title       = Titel und ID des Formulars

fields2Item_description = <p formHeight="300">\nZu beachten ist die <b>Art des Feldes</b> und die <b>Plausibilit\u00E4tpr\u00FCfung</b>. Folgende Feldarten stehen (mindestens) zur Verf\u00FCgung:\n<ul>\n<li>TextFormField</li>\n<li>DateTimeFormField</li>\n<li>PicklistFormField</li>\n<li>CheckboxFormField</li>\n<li>BetweenFormField</li>\n</ul>\nUnd folgende Pr\u00FCfungen stehen (mindestens) zur Verf\u00FCgung:\n<ul>\n<li>NumberValidator</li>\n<li>IntegerValidator</li>\n<li>BetweenValidator</li>\n</ul>\nBeachten Sie die Dokumentation im <b>Java-Doc-View</b> f\u00FCr diese Elemente oder verwenden Sie einen entsprechenden Spickzettel, um weitere Felder einzuf\u00FCgen.\n</p>
fields2Item_title       = Feldtypen und Pr\u00FCfung

fieldsItem_description = <p formHeight="170">\nDie Methode <code>createFormFields()</code> enth\u00E4lt die Deklaration der Felder des Formulars. Es wurde ein einfacher Beispielaufruf eingef\u00FCgt. Dieser muss nun angepasst und erweitert werden.</p>\n\n<p>Um weitere Felder anzulegen, kopieren Sie einfach diese Beispieldeklaration. Beachten Sie, dass der <b>Attributname</b> genau einem Attribut aus den Daten entsprechen muss. Alle vorhandenen Attribute k\u00F6nnen Sie in der Attributtabelle oder im Standardformular einsehen.</p>\n
fieldsItem_title       = Felder anlegen

intro_description = Anlegen eines neues Scriptes f\u00FCr ein Formular.
intro_title       = \u00DCberblick

nameItem_description = Der Name des Scriptes wird gleichzeichtig auch als Bezeichner im Script verwendet. Der Name darf daher nur Buchstaben, Zahlen oder den Unterstrich enthalten und muss mit einem Buchstaben beginnen.
nameItem_dialogMsg   = Geben Sie de Namen des neuen Scripts an. Die Endung (.java) wird automatisch angef\u00FCgt.
nameItem_dialogTitle = Name des Scripts
nameItem_srcRes      = resources/snippets/NewFormPage_de.java
nameItem_title       = Name des Scripts

shownItem_description = <p formHeight="200">Jedes Formular muss entscheiden ob es f\u00FCr ein bestimmtes <code>Feature</code> angezeigt werden m\u00F6chte. Die Entscheidung dar\u00FCber wird in der Methode <code>wantsToBeShown()</code> getroffen.</p>\n\n<p>Standardm\u00E4\u00DFig wird hier <code>true</code> zur\u00FCckgegeben, wodurch das Formular f\u00FCr jeden Featuretyp angezeigt wird. Dieses Verhalten sollte (sp\u00E4ter) angepasst werden.</p>\n\n<p>Mit der Funktion <code>featureNameContains()</code> kann gepr\u00FCft werden ob der Typname eine bestimmte Zeichenkette enth\u00E4lt. N\u00E4heres siehe Java-Doc.</p>
shownItem_title       = Anzeigen oder nicht?

title = Neues Formular anlegen (Java)
